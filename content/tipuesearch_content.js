var tipuesearch = {"pages": [{'title': 'About', 'text': '國立虎尾科技大學機械設計工程系 \n National Formosa University \n Department of Mechanical Design Engineering \n cp2024 計算機程式 \n 課程教材: \n Learn Python with Jupyter  ( site ,  ebook ) \n 教育版帳號\xa0microsoftonline 登入點:\xa0 https://login.microsoftonline.com/ \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入  https://login.microsoftonline.com/  Office 365 \n Teams 團隊代碼:  ldodwua \n 個人倉儲: github-ruiyi512 \n 個人網站: 41323107 \n 其他資訊: \n cd2023_pj3ag4_zmq_football_4.7.7z \n cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z \n', 'tags': '', 'url': 'About.html'}, {'title': 'Attendance', 'text': '出席 (10%) - 自行舉證評分 \n 自行利用 Github commits 提交記錄評分. \n', 'tags': '', 'url': 'Attendance.html'}, {'title': 'HW 1', 'text': '主題: 基於瀏覽器的分散式版次管理與整合程式開發環境 (10%) \n USB 隨身碟: \n 下載  python_2025_lite.7z  (428 MB, 解開壓縮後約 1.5 GB) \n Jupyter \n What are Github and Codespaces? \n Hello World - GitHub Docs \n 利用包含學號的字串作為帳號, 申請免費使用 Github. \n Python 課程教材:  https://www.learnpythonwithjupyter.com/  - PART 1 \n \n PART 1: Creating the basics 資料整理 (10%) \n 啟動可攜程式系統後, 在命令列中: \n y:\\>cd notebook \n y:\\notebook>jupyter lab --collaborative \n 進入  01_string_input_print.ipynb  練習如何修改 PART1 notebook 後存檔, 上傳至作業倉儲中的 downloads 目錄後, 透過  https://nbviewer.org/  將已經提交的  01_string_input_print.ipynb , 嵌入下列網頁中. \n \n 上列 iframe 標註的 html 語法: \n <iframe width="600" height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb"></iframe> \n 完成上述流程整理後, 請將 HW1 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'HW 1.html'}, {'title': 'HW 1 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 Topic 1 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 1 Exam.html'}, {'title': 'w7', 'text': '\n 程式碼逐行解釋：  \n a = "我已經會寫簡單的python 程式。" 這一行將字串 "我已經會寫簡單的python 程式。"  \n 賦值給變數 a。 for i in range(1, 11): 這是一個 for 迴圈，使用 range(1, 11) 生成從 1 到 10（不包含 11）的數字，並依次將每個數字賦值給變數 i。 \n  print(i, a) 在每次迴圈中，程式會執行 print() 函數，輸出當前的變數 i（數字）和變數 a（字串）的值。  \n 結果： 程式將輸出以下內容，每一行包含一個數字（從 1 到 10）和相同的字串：  \n 1 我已經會寫簡單的python 程式。  \n 2 我已經會寫簡單的python 程式。  \n 3 我已經會寫簡單的python 程式。  \n 4 我已經會寫簡單的python 程式。  \n 5 我已經會寫簡單的python 程式。  \n 6 我已經會寫簡單的python 程式。  \n 7 我已經會寫簡單的python 程式。  \n 8 我已經會寫簡單的python 程式。  \n 9 我已經會寫簡單的python 程式。  \n 10 我已經會寫簡單的python 程式。 \n \n', 'tags': '', 'url': 'w7.html'}, {'title': 'w9', 'text': 'w9_triangle_1 \n https://mdecp2024.github.io/hw-ruiyi512/content/Brython.html ?src= https://gist.githubusercontent.com/ruiyi512/d640283c79a5366218bf265c090391ee/raw/2d8084b606ae7ee1f1f66b9bd3e986f39d8740b5/w9_triangle_1.py \n \n w9_triangle_2 \n https://mdecp2024.github.io/hw-ruiyi512/content/Brython.html ?src= https://gist.githubusercontent.com/ruiyi512/642a10389d1a38f70e8fe1c6d93dbe14/raw/edda1fe42edb23a71802bb87ce8dd0ce166ffaed/w9_triangle_2.py \n \n', 'tags': '', 'url': 'w9.html'}, {'title': 'w10', 'text': '隨堂考試 \n 題目一:\xa0 \n Brython_triangle \n \n SciTE 編輯器_triangle \n \n 命令提示字元視窗_triangle \n \n Jupyter Lab_triangle \n \n Codespaces\xa0_triangle \n \n 題目二:\xa0 \n \n 題目三: \n \n \n 綜合心得: \n \xa0 \xa0 \xa0 同樣語言在不同環境下依然可以穩定運行真的很棒，使用者介面、存檔、開啟方式等對我而言都覺得還好，我學習數種CAD、CAE、CAM軟體，我認為相容性較為重要，連網的所以相對方便，但錄製時因為網路很差導致需要網路的線上版Jupyter Lab&Codespacestl超難用，學習五種環境依照當下狀態有更多選擇真的很棒。我很想將ESP使用網頁介面控制，查詢資料後也是使用C++還有網頁相互配合，這門課真的收穫滿滿，也很難用幾句話描述學習的東西，因為就是基礎，就是我需要的。 \n', 'tags': '', 'url': 'w10.html'}, {'title': 'w11_hw', 'text': '11x11 的字元區域中, 以 "*" 字元列印出圓型區域.\xa0 \n Round \n 改進 \n Round2 \n 像素繪製圓形 \n Pixel drawing circle_0 \n \n \n \n 解題過程與心得 \n \n 解題過程 \n \n \n 需求分析 初始目標是根據使用者的要求，使用 Brython 在 HTML 中實現一個可以互動繪圖的功能，具體需求如下： \n \n 繪製圓形，提供更細緻、更圓潤的效果。 \n 增加控制功能：可以動態調整格數、圓形的大小、位置和顏色。 \n 增加按鈕執行的功能，讓用戶操作更加便捷。 \n \n \n \n 功能拆解 \n \n 網格繪製 ：基於使用者指定的格數，實現畫布的動態網格化。 \n 圓形繪製 ：通過數學計算點與圓心的距離，實現圓形內部填充與邊緣漸變效果。 \n 顏色控制 ：添加顏色選擇器，通過 HEX 顏色轉換為 RGB 處理。 \n 互動功能 ：允許使用者點擊畫布或者輸入參數後執行畫圖。 \n 重繪功能 ：設置初始化按鈕，方便使用者清除畫布並重新配置。 \n \n \n \n 程式撰寫 \n \n 利用 Brython 實現畫布的繪圖邏輯，結合 HTML 的輸入框和按鈕構建互動式界面。 \n 通過  fill  函數處理每個格子的位置與顏色，確保繪製圓形時邊緣更加平滑。 \n 利用 Python 的邏輯控制流程來動態繪製圓形和重設畫布。 \n \n \n \n 測試與優化 \n \n 測試畫布的邊界行為，確保圓形在邊緣不會超出可視範圍。 \n 調整網格格數（5 至 50），驗證在不同分辨率下的圓形渲染效果。 \n 優化按鈕與輸入框的交互流程，讓界面操作更加直觀。 \n \n \n \n \n 心得 \n \n \n 挑戰 在限制條件下，要用 11x11 或更小的像素網格生成圓形，考驗了如何利用數學計算來處理邊緣的平滑度與透明度。需要對圓的方程式和漸變邏輯進行多次調整。 \n \n \n 解決方案 \n \n 引入  rgba  通道實現透明度處理，使得圓形的邊緣漸變更自然。 \n 設置靈活的參數輸入功能（如格數、顏色、圓心座標），增加了程式的泛用性。 \n \n \n \n 學習收穫 \n \n 掌握了 Brython 與 HTML 元件的結合使用，特別是在互動界面設計上的應用。 \n 深化了對幾何學的理解，尤其是圓形的數學描述和像素化渲染原理。 \n 瞭解了如何使用顏色模型進行動態圖形處理，讓程式具備更高的可玩性和用戶體驗。 \n \n \n \n 下一步優化方向 \n \n 增加更高階的幾何圖形支持，例如橢圓、多邊形等。 \n 引入滑桿或拖拽功能，讓使用者直接通過拖動滑桿調整參數值，進一步提升操作體驗。 \n 優化畫布效能，支持更大範圍的格數與畫布尺寸。 \n \n \n \n \n', 'tags': '', 'url': 'w11_hw.html'}, {'title': 'w12', 'text': 'for&print \xa01->5 \n \n https://mdecp2024.github.io/hw-ruiyi512/content/Brython.html?src= \n w12_1 \n \n \n \n', 'tags': '', 'url': 'w12.html'}, {'title': 'HW 2', 'text': '主題: Python 的數列、判斷式與重複迴圈 (20%) \n Python 課程教材:  https://www.learnpythonwithjupyter.com/  - PART 2 and Part 3 \n \n 延續 HW 1 網頁資料整理與程式練習方法, 整理下列內容 (20%): \n PART 2: Introduction to lists and if/else statements \n PART 3: Introduction to the for loop \n 完成上述流程整理後, 請將 HW2 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'HW 2.html'}, {'title': 'HW 2 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 2 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 2 Exam.html'}, {'title': 'HW 3', 'text': '主題: Python 的數字、演算法與迴圈 (20%) \n Python 課程教材:  https://www.learnpythonwithjupyter.com/  - PART 4 and Part 5 \n 完成上述流程整理後, 請將 HW3 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'HW 3.html'}, {'title': 'HW 3 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 3 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 3 Exam.html'}, {'title': 'HW 4', 'text': '主題: 利用 Python 控制機電模擬系統 (20%) \n 利用\xa0 https://solvespace.com/ \xa0建立機械系統零組件 \n 利用  CoppeliaSim  建立機電模擬系統 \n 利用  Python  跨網路控制瀏覽器上的機電模擬系統 \n 範例: \n cd2023_pj3ag4_zmq_football_4.7.7z \n cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z \n 完成上述流程整理後, 請將 HW4 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'HW 4.html'}, {'title': 'HW 4 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 4 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 4 Exam.html'}, {'title': 'Final Report', 'text': '期末口頭與書面專題報告 (20%) \n 期末口頭專題報告影片: \n ...... \n 期末書面專題報告檔案 (pdf): \n ...... \n 電腦輔助設計與實習課程總結心得: \n ...... \n 期末報告自評成績: \n 完成上述流程後, 請將 Final Report 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'Final Report.html'}, {'title': 'Brython', 'text': '從 1 累加到 100: \n 1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n \n', 'tags': '', 'url': 'Brython.html'}]};